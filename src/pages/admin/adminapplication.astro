---
import DashboardLayout from "../../layouts/DashboardLayout.astro";
import AppForm from "../../components/AppForm.tsx";
import { app, db } from "../../firebase/server";
import { getAuth } from "firebase-admin/auth";
import type { DocumentData } from "firebase-admin/firestore";
import type { FormViewData } from "../../env";
import Sidebar from "../../components/Sidebar"

let userEmail = "";
let registered = false
let applicationData: FormViewData | null = null

try {
  const auth = getAuth(app);

  // no session or invalid session will be redirected to sign in page
  const sessionCookieObj = Astro.cookies.get("__session");
  if (!sessionCookieObj) {
    return Astro.redirect("/");
  }
  const sessionCookie = sessionCookieObj.value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (!decodedCookie) {
    return Astro.redirect("/");
  }

  // invalid user will be redirected to sign in page
  const user = await auth.getUser(decodedCookie.uid);
  if (!user) {
    return Astro.redirect("/");
  }

  userEmail = user.email as string;
  const newUserState = false


  // if already registered then do not render submit button
  const docSnap = await db.collection("Forms").doc(decodedCookie.email as string).get()
  if (docSnap.exists) {
    const data = docSnap.data() as DocumentData
    registered = true
    applicationData = {
      email: data.email,
      firstName: data.firstName,
      lastName: data.lastName,
      uin: data.uin,
      gender: data.gender,
      year: data.year,
      availability: data.availability,
      moreAvailability: data.moreAvailability, // optional
      dietaryRestriction: data.dietaryRestriction,
      otherDietaryRestriction: data.otherDietaryRestriction, // optional
      shirtSize: data.shirtSize,
      teamPlan: data.teamPlan,
      preWorkshops: data.preWorkshops,
      jobType: data.jobType, 
      otherJobType: data.otherJobType,// optional
      resumeLink: data.resumeLink, // optional
      appStatus: data.appStatus, // status of application
      createdAt: data.createdAt.toDate().toLocaleString("en-US", { timeZone: "America/Chicago"}) || ""
    }
  }
  else if (!newUserState) {
    // return new Response("Application is closed due to reaching capacity", { status: 403 })
  }

} catch (err) {
  console.error(err);
  return Astro.redirect("/");
}
---

<DashboardLayout>
    <div class="admin-section">
        <Sidebar/>
        <div class="app-form">
            <AppForm email={userEmail} registered={registered} applicationData={applicationData} isAdmin={true} client:only="react" />
        </div>
  
        </div>
    
</DashboardLayout>

<style>
.admin-section {
    display: flex;
}

.app-form {
    border: 5px solid #f7f7f7;
    /* background-color: #f7f7f7; */
    margin: 0 0 10px 20px;
    border-radius: 10px;
    padding: 15px;
    width: 100%;
    max-height: 100vh;
    overflow-y: auto;
}
</style>

